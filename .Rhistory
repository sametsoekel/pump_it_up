train$public_meeting
train_y<-as.numeric(train$public_meeting)
train_y
train_y<-as.numeric(train$public_meeting)-1
train_y
test_y<-as.numeric(test$public_meeting)-1
learnpool <- catboost.load_pool(train_x,label = train_y,cat_features = catnames)
testpool <- catboost.load_pool(test_x,label = test_y,cat_features = catnames)
catparam <- list(use_best_model=T,loss_function='Logloss',eval_metric='Accuracy',
depth=12,learning_rate=0.37,iterations=200,prediction_type='Class')
save.image("~/Desktop/pump_it_up/R Scripts/19eyl_imputingCatBOOST.RData")
catparam <- list(use_best_model=T,loss_function='Logloss',eval_metric='Accuracy',
depth=12,learning_rate=0.37,iterations=200,prediction_type='Class')
catmodel2 <- catboost.train(learnpool,testpool,catparam)
catparam <- list(use_best_model=T,loss_function='Logloss',eval_metric='Accuracy',
depth=12,learning_rate=0.37,iterations=35,prediction_type='Class')
catmodel2 <- catboost.train(learnpool,testpool,catparam)
catparam <- list(use_best_model=T,loss_function='Logloss',eval_metric='Accuracy',
depth=12,learning_rate=0.37,iterations=50,prediction_type='Class')
catmodel2 <- catboost.train(learnpool,testpool,catparam)
load("~/Desktop/pump_it_up/R Scripts/19eyl_imputingCatBOOST.RData")
test_x %>% View()
pred2 <- catboost.predict(catmodel2,catboost.load_pool(test_x))
pred2 <- catboost.predict(catmodel2,catboost.load_pool(test_x),type="class")
pred2 <- catboost.predict(catmodel2,catboost.load_pool(test_x),prediction_type='Class')
confusionMatrix(as.factor(pred2),as.factor(test_y))
imputepred2 <- catboost.predict(catmodel2,catboost.load_pool(public_meeting_target_noid),prediction_type = 'Class')
imputepred2 <- ifelse(imputepred2==0,"False","True")
imputepred2 <- as.factor(imputepred2)
imputepred2
public_meeting_target$public_meeting <- imputepred2
repairedpart <- rbind(full,public_meeting_target)
repairedid <- repairedpart$id
df[match(repairedid,df$id),] <- repairedpart
full <- df[complete.cases(df),]
full_noid <- full %>% select(-"id")
#### Picking just NA public_meeting
logvector <- is.na(df$permit)&complete.cases(df %>% select(-"permit"))
permit_target <- df[logvector,] %>% select(-"permit")
permit_target_noid <- permit_target %>% select(-"id")
index <- sample(1:nrow(full),nrow(full))
train_index <- index[1:35000]
train<-full_noid[train_index,]
train_x<-train %>% select(-c("permit"))
train$permit
train_y<-as.numeric(train$permit)-1
train_y
test<-full_noid[-train_index,]
test_x<-test %>% select(-c("permit"))
test_y<-as.numeric(test$permit)-1
catnames <- train %>% purrr::keep(is.factor) %>% names()
catnames <- train %>% purrr::keep(is.factor) %>% names()
learnpool <- catboost.load_pool(train_x,label = train_y,cat_features = catnames)
testpool <- catboost.load_pool(test_x,label = test_y,cat_features = catnames)
catparam <- list(use_best_model=T,loss_function='Logloss',eval_metric='Accuracy',
depth=12,learning_rate=0.37,iterations=50,prediction_type='Class')
catmodel3 <- catboost.train(learnpool,testpool,catparam)
pred3 <- catboost.predict(catmodel2,catboost.load_pool(test_x),prediction_type='Class')
pred3 <- catboost.predict(catmodel3,catboost.load_pool(test_x),prediction_type='Class')
confusionMatrix(as.factor(pred2),as.factor(test_y)) ### %96.77 test acc.
confusionMatrix(as.factor(pred3),as.factor(test_y)) ### %96.77 test acc.
confusionMatrix(as.factor(pred3),as.factor(test_y)) ### %97.48 test acc.
imputepred3 <- catboost.predict(catmodel3,catboost.load_pool(permit_target_noid),prediction_type = 'Class')
imputepred3 <- ifelse(imputepred3==0,"False","True")
imputepred3 <- as.factor(imputepred3)
permit_target$permit <- imputepred3
repairedpart <- rbind(full,permit_target)
repairedid <- repairedpart$id
df[match(repairedid,df$id),] <- repairedpart
full <- df[complete.cases(df),]
full_noid <- full %>% select(-"id")
View(full)
library(readr)
write_csv(full,"19EylImputedCatBOOST.csv")
save.image("~/Desktop/pump_it_up/R Scripts/19eyl_imputingCatBOOST.RData")
19EylImputedCatBOOST <- read.csv("~/Desktop/pump_it_up/19EylImputedCatBOOST.csv", stringsAsFactors=TRUE)
View(19EylImputedCatBOOST)
df <- read.csv("~/Desktop/pump_it_up/19EylImputedCatBOOST.csv", stringsAsFactors=TRUE)
anyNA(df)
View(df)
glimpse(df)
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index %>% View()
index %>% View()
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
train_index <- index[1:35603]
train <- df[train_index,]
train <- df[train_index,] %>% select(-"id")
train_x <- train %>% select(-"status_group")
train_y <- train$status_group
head(train_y)
train_y %>% View()
train_y <- as.numeric(train$status_group)-1
train_y %>% View()
test <- df[-train_index,] %>% select(-"id")
View(train_x)
test_x <- test %>% select(-"status_group")
test_y <- as.numeric(test$status_group)-1
catnames <- train %>% purrr::keep(is.factor) %>% names
catnames
catnames <- train %>% purrr::keep(is.factor) %>% names
learnpool <- catboost.load_pool(train_x,label = train_y,cat_features = catnames)
testpool <- catboost.load_pool(test_x,label = test_y,cat_features = catnames)
catparam <- list(use_best_model=T,loss_function='Logloss',eval_metric='Accuracy',
depth=12,learning_rate=0.37,iterations=50,prediction_type='Class')
catmodel <- catboost.train(learnpool,testpool,catparam)
catparam <- list(use_best_model=T,loss_function='Multiclass',eval_metric='Accuracy',
depth=12,learning_rate=0.37,iterations=50,prediction_type='Class')
catmodel <- catboost.train(learnpool,testpool,catparam)
catparam <- list(use_best_model=T,loss_function='MultiClass',eval_metric='Accuracy',
depth=12,learning_rate=0.37,iterations=50,prediction_type='Class')
catmodel <- catboost.train(learnpool,testpool,catparam)
save.image("~/Desktop/pump_it_up/R Scripts/19Eyl_Night.RData")
catparam2 <- list(use_best_model=T,loss_function='MultiClass',eval_metric='Accuracy',
depth=12,learning_rate=0.37,iterations=50,prediction_type='Class')
catparam2 <- list(use_best_model=T,loss_function='MultiClass',eval_metric='Accuracy',
depth=12,learning_rate=0.037,iterations=50,prediction_type='Class')
catparam2 <- list(use_best_model=T,loss_function='MultiClass',eval_metric='Accuracy',
depth=12,learning_rate=0.037,iterations=100,prediction_type='Class')
catmodel2 <- catboost.train(learnpool,testpool,catparam2)
catparam2 <- list(use_best_model=T,loss_function='MultiClass',eval_metric='Accuracy',
depth=12,learning_rate=0.69,iterations=100,prediction_type='Class')
catmodel2 <- catboost.train(learnpool,testpool,catparam2)
catparam3 <- list(use_best_model=T,loss_function='MultiClass',eval_metric='Accuracy',
depth=6,learning_rate=0.37,iterations=100,prediction_type='Class')
catmodel3 <- catboost.train(learnpool,testpool,catparam3)
catparam3 <- list(use_best_model=T,loss_function='MultiClass',eval_metric='Accuracy',
depth=7,learning_rate=0.37,iterations=200,prediction_type='Class')
catmodel3 <- catboost.train(learnpool,testpool,catparam3)
pred <- catboost.predict(catmodel3,catboost.load_pool(test_x),prediction_type = 'Class')
pred <- catboost.predict(catmodel3,catboost.load_pool(test_x),prediction_type = 'Class') %>% as.factor()
data.frame(pred,obs = as.factor(test_y)) %>% confusionMatrix()
data.frame(pred,as.factor(test_y)) %>% confusionMatrix()
data.frame(pred,as.factor(test_y))
(pred,as.factor(test_y)) %>% confusionMatrix()
-confusionMatrix(pred,as.factor(test_y))
confusionMatrix(pred,as.factor(test_y))
fullsubmission <- read.csv("~/Desktop/pump_it_up/Imputed Submission Var./fullsubmission.csv", stringsAsFactors=TRUE)
View(fullsubmission)
fullsubmission <- read.csv("~/Desktop/pump_it_up/Imputed Submission Var./fullsubmission.csv", stringsAsFactors=TRUE)
SubmissionFormat <- read.csv("~/Desktop/pump_it_up/SubmissionFormat.csv", stringsAsFactors=TRUE)
View(SubmissionFormat)
fullsubmission <- fullsubmission %>% select(-"id")
pred <- catboost.predict(catmodel3,catboost.load_pool(fullsubmission),prediction_type = 'Class')
pred <- ifelse(pred==0,"functional",
ifelse(pred==1,"functional needs repair","non functional"))
SubmissionFormat$status_group <- pred
SubmissionFormat
write_csv(SubmissionFormat,"9thSubByCatBOOST.csv")
save.image("~/Desktop/pump_it_up/R Scripts/19Eyl_Night.RData")
load("~/Desktop/pump_it_up/R Scripts/20eyllast.RData")
library(catboost)
library(dplyr)
learnpool <- catboost.load_pool(train_x,label = train_y,cat_features = catnames)
testpool <- catboost.load_pool(test_x,label = test_y,cat_features = catnames)
catparam <- list(use_best_model=T,loss_function='RMSE',eval_metric='RMSE',
depth=12,learning_rate=0.6,iterations=100)
catmodel1 <- catboost.train(learnpool,testpool,catparam)
catparam <- list(use_best_model=T,loss_function='RMSE',eval_metric='RMSE',
depth=12,learning_rate=0.06,iterations=100)
catmodel1 <- catboost.train(learnpool,testpool,catparam)
catparam <- list(use_best_model=T,loss_function='RMSE',eval_metric='RMSE',
depth=12,learning_rate=0.06,iterations=200)
catmodel1 <- catboost.train(learnpool,testpool,catparam)
imputepred <- catboost.predict(catmodel1,catboost.load_pool(construction_year_target_noid))
construction_year_target$construction_year <- imputepred
repairedpart <- rbind(full,construction_year_target)
repairedid <- repairedpart$id
df[match(repairedid,df$id),] <- repairedpart
full <- df[complete.cases(df),]
full_noid <- full %>% select(-"id")
#### Picking just NA public_meeting
logvector <- is.na(df$public_meeting)&complete.cases(df %>% select(-"public_meeting"))
public_meeting_target <- df[logvector,] %>% select(-"public_meeting")
public_meeting_target_noid <- public_meeting_target %>% select(-"id")
index <- sample(1:nrow(full),nrow(full))
index <- sample(1:nrow(full),nrow(full))
train_index <- index[1:9097]
train<-full_noid[train_index,]
train_x<-train %>% select(-c("public_meeting"))
train_y<-as.numeric(train$public_meeting)-1
test<-full_noid[-train_index,]
test_x<-test %>% select(-c("public_meeting"))
test_y<-as.numeric(test$public_meeting)-1
learnpool <- catboost.load_pool(train_x,label = train_y,cat_features = catnames)
testpool <- catboost.load_pool(test_x,label = test_y,cat_features = catnames)
learnpool <- catboost.load_pool(train_x,label = train_y,cat_features = catnames)
testpool <- catboost.load_pool(test_x,label = test_y,cat_features = catnames)
catparam <- list(use_best_model=T,loss_function='Logloss',eval_metric='Accuracy',
depth=12,learning_rate=0.37,iterations=50,prediction_type='Class')
catmodel2 <- catboost.train(learnpool,testpool,catparam)
catparam <- list(use_best_model=T,loss_function='Logloss',eval_metric='Accuracy',
depth=12,learning_rate=0.37,iterations=90,prediction_type='Class')
catmodel2 <- catboost.train(learnpool,testpool,catparam)
pred2 <- catboost.predict(catmodel2,catboost.load_pool(test_x),prediction_type='Class')
imputepred2 <- catboost.predict(catmodel2,catboost.load_pool(public_meeting_target_noid),prediction_type = 'Class')
imputepred2 <- ifelse(imputepred2==0,"False","True")
imputepred2 <- as.factor(imputepred2)
public_meeting_target$public_meeting <- imputepred2
repairedpart <- rbind(full,public_meeting_target)
repairedid <- repairedpart$id
df[match(repairedid,df$id),] <- repairedpart
full <- df[complete.cases(df),]
full_noid <- full %>% select(-"id")
#### Picking just NA public_meeting
logvector <- is.na(df$permit)&complete.cases(df %>% select(-"permit"))
permit_target <- df[logvector,] %>% select(-"permit")
permit_target_noid <- permit_target %>% select(-"id")
index <- sample(1:nrow(full),nrow(full))
train_index <- index[1:9544]
index <- sample(1:nrow(full),nrow(full))
index <- sample(1:nrow(full),nrow(full))
index <- sample(1:nrow(full),nrow(full))
index <- sample(1:nrow(full),nrow(full))
index <- sample(1:nrow(full),nrow(full))
index <- sample(1:nrow(full),nrow(full))
index <- sample(1:nrow(full),nrow(full))
index <- sample(1:nrow(full),nrow(full))
train_index <- index[1:9544]
train<-full_noid[train_index,]
train<-full_noid[train_index,]
train_x<-train %>% select(-c("permit"))
train_y<-as.numeric(train$permit)-1
test<-full_noid[-train_index,]
test_x<-test %>% select(-c("permit"))
test_y<-as.numeric(test$permit)-1
catnames <- train %>% purrr::keep(is.factor) %>% names()
learnpool <- catboost.load_pool(train_x,label = train_y,cat_features = catnames)
testpool <- catboost.load_pool(test_x,label = test_y,cat_features = catnames)
catparam <- list(use_best_model=T,loss_function='Logloss',eval_metric='Accuracy',
depth=12,learning_rate=0.37,iterations=50,prediction_type='Class')
catmodel3 <- catboost.train(learnpool,testpool,catparam)
imputepred3 <- catboost.predict(catmodel3,catboost.load_pool(permit_target_noid),prediction_type = 'Class')
imputepred3 <- ifelse(imputepred3==0,"False","True")
imputepred3 <- as.factor(imputepred3)
permit_target$permit <- imputepred3
repairedpart <- rbind(full,permit_target)
repairedid <- repairedpart$id
df[match(repairedid,df$id),] <- repairedpart
full <- df[complete.cases(df),]
full_noid <- full %>% select(-"id")
View(full)
#### Picking just NA public_meeting
logvector <- is.na(df$quantity_group)&complete.cases(df %>% select(-"quantity_group"))
quantity_group_target <- df[logvector,] %>% select(-"quantity_group")
#### Picking just NA public_meeting
logvector <- is.na(df$quantity)&complete.cases(df %>% select(-"quantity"))
quantity_group_target <- df[logvector,] %>% select(-"quantity")
quantity_group_target <- df[logvector,] %>% select(-"quantity")
summary(df)
save.image("~/Desktop/pump_it_up/R Scripts/20eyllast.RData")
#### Picking just NA public_meeting
logvector <- is.na(df$quality_group)&complete.cases(df %>% select(-"quality_group"))
summary(logvector)
#### Picking just NA public_meeting
logvector <- is.na(df$payment)&complete.cases(df %>% select(-"payment"))
summary(logvector)
df[logvector,]
#### Picking just NA public_meeting
logvector <- is.na(df$management)&complete.cases(df %>% select(-"management"))
df[logvector,]
summary(df)
median(df$construction_year,na.rm = T)
mean(df$construction_year,na.rm=T)
val <- unique(df$construction_year[!is.na(df$construction_year)])
mode <- val[which.max(tabulate(match(df$construction_year, val)))]
df$construction_year <- ifelse(is.na(df$construction_year),mean(df$construction_year,na.rm=T),df$construction_year)
val <- unique(df$permit[!is.na(df$permit)])
mode <- val[which.max(tabulate(match(df$permit, val)))]
df$permit <- ifelse(is.na(df$permit),mode,df$permit)
val <- unique(df$funder[!is.na(df$funder)])
mode <- val[which.max(tabulate(match(df$funder, val)))]
df$funder <- ifelse(is.na(df$funder),mode,df$funder)
mode
val <- unique(df$installer[!is.na(df$installer)])
mode <- val[which.max(tabulate(match(df$installer, val)))]
df$installer <- ifelse(is.na(df$installer),mode,df$installer)
val <- unique(df$subvillage[!is.na(df$subvillage)])
mode <- val[which.max(tabulate(match(df$subvillage, val)))]
df$subvillage <- ifelse(is.na(df$subvillage),mode,df$subvillage)
val <- unique(df$public_meeting[!is.na(df$public_meeting)])
mode <- val[which.max(tabulate(match(df$public_meeting, val)))]
df$public_meeting <- ifelse(is.na(df$public_meeting),mode,df$public_meeting)
val <- unique(df$scheme_management[!is.na(df$scheme_management)])
mode <- val[which.max(tabulate(match(df$scheme_management, val)))]
df$scheme_management <- ifelse(is.na(df$scheme_management),mode,df$scheme_management)
anyNA(df)
library(readr)
write_csv(df,"ImputedCatBoostModMedian.csv")
load("~/Desktop/pump_it_up/R Scripts/18eyl1stsubmission.RData")
ImputedCatBoostModMedian <- read.csv("~/Desktop/pump_it_up/ImputedCatBoostModMedian.csv", stringsAsFactors=TRUE)
View(ImputedCatBoostModMedian)
z<-ImputedCatBoostModMedian %>% select(-"id")
textpred <- catboost.predict(catmodel,catboost.load_pool(z),prediction_type = 'Class')
z<-ImputedCatBoostModMedian %>% select(-"id") %>% catboost.load_model(cat_features=catnames)
targetsub
targetsub %>% View()
subpool <- ImputedCatBoostModMedian %>% select(-"id") %>% catboost.load_pool(cat_features = catnames)
textpred <- catboost.predict(catmodel,subpool,prediction_type = 'Class')
textpred <- catboost.predict(catmodel,subpool,prediction_type = 'Class')
glimpse(ImputedCatBoostModMedian)
glimpse(targetsub)
subpool <- targetsub %>% select(-"id") %>% catboost.load_pool(cat_features = catnames)
textpred <- catboost.predict(catmodel,subpool,prediction_type = 'Class')
subpool <- ImputedCatBoostModMedian %>% select(-"id") %>% catboost.load_pool(cat_features = catnames)
textpred <- catboost.predict(catmodel,subpool,prediction_type = 'Class')
View(z)
load("~/Desktop/pump_it_up/R Scripts/20eyllast.RData")
full %>% View()
df$construction_year <- ifelse(is.na(df$construction_year),mean(df$construction_year,na.rm=T),df$construction_year)
val <- unique(df$permit[!is.na(df$permit)])
mode <- val[which.max(tabulate(match(df$permit, val)))]
df$permit <- ifelse(is.na(df$permit),as.factor(mode),df$permit)
View(df)
load("~/Desktop/pump_it_up/R Scripts/20eyllast.RData")
View(df)
df$construction_year <- ifelse(is.na(df$construction_year),mean(df$construction_year,na.rm=T),df$construction_year)
df$permit <- ifelse(is.na(df$permit),"True",df$permit)
load("~/Desktop/pump_it_up/R Scripts/20eyllast.RData")
df$permit <- as.factor(ifelse(is.na(df$permit),"True",df$permit))
load("~/Desktop/pump_it_up/R Scripts/20eyllast.RData")
df$permit <- as.character(df$permit)
df$permit <- ifelse(is.na(df$permit),"True",df$permit)
df$permit <- as.factor(df$permit)
df$funder <- as.character(df$funder)
val <- unique(df$funder[!is.na(df$funder)])
mode <- val[which.max(tabulate(match(df$funder, val)))]
df$funder <- ifelse(is.na(df$funder),mode,df$funder)
mode
df$installer <- as.character(df$installer)
val <- unique(df$installer[!is.na(df$installer)])
mode <- val[which.max(tabulate(match(df$installer, val)))]
df$installer <- ifelse(is.na(df$installer),mode,df$installer)
df$subvillage <- as.character(df$subvillage)
val <- unique(df$subvillage[!is.na(df$subvillage)])
mode <- val[which.max(tabulate(match(df$subvillage, val)))]
df$subvillage <- ifelse(is.na(df$subvillage),mode,df$subvillage)
df$public_meeting <- as.character(df$public_meeting)
val <- unique(df$public_meeting[!is.na(df$public_meeting)])
mode <- val[which.max(tabulate(match(df$public_meeting, val)))]
df$public_meeting <- ifelse(is.na(df$public_meeting),mode,df$public_meeting)
df$scheme_management <- as.character(df$scheme_management)
val <- unique(df$scheme_management[!is.na(df$scheme_management)])
mode <- val[which.max(tabulate(match(df$scheme_management, val)))]
df$scheme_management <- ifelse(is.na(df$scheme_management),mode,df$scheme_management)
anyNA(df)
summary(df)
df$construction_year <- ifelse(is.na(df$construction_year),mean(df$construction_year,na.rm=T),df$construction_year)
anyNA(df)
write_csv(df,"ImputedCatBoostModMedian2.csv")
View(df)
load("~/Desktop/pump_it_up/R Scripts/18eyl1stsubmission.RData")
eylul20 <- read.csv("~/Desktop/pump_it_up/ImputedCatBoostModMedian2.csv", stringsAsFactors=TRUE)
View(eylul20)
subpool <- eylul20 %>% select(-"id") %>% catboost.load_pool(cat_features = catnames)
catpred <- catboost.predict(catmodel,subpool,verbose = T,prediction_type = "Class")
catpred <- catpred %>% as.factor()
textpred <- ifelse(catpred==0,"functional",
ifelse(catpred==1,"functional needs repair","non functional"))
SubmissionFormat$status_group <- textpred
SubmissionFormat$status_group <- textpred
write_csv(SubmissionFormat,"10thSubByCatBoost.csv")
df <- read.csv("~/Desktop/pump_it_up/Imputed Train Set/19EylImputedCatBOOST.csv", stringsAsFactors=TRUE)
View(df)
View(df)
library(dplyr)
library(catboost)
df <- df %>% select(-"id")
View(df)
anyNA(df)
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
train_index <- index[1:round(0.7*nrow(df))]
train_index <- index[1:round(0.7*nrow(df))]
train <- df[train_x]
train <- df[train_index,]
train_x <- train %>% select(-"construction_year")
train_x <- train %>% select(-"status_group")
View(train_x)
View(df)
train_y <- train$status_group
test <- df[-train_index,]
test_x <- test %>% select(-"status_group")
test_y <- test$status_group
test_y
test_y <- as.numeric(test$status_group)-1
test_y
train_y <- as.numeric(train$status_group)-1
catnames <- test %>% purrr::keep(is.factor) %>% names()
learnpool <- catboost.load_pool(train_x,label=train_y,cat_features = catnames)
testpool <- catboost.load_pool(test_x,label=test_y,cat_features = catnames)
save.image("~/Desktop/pump_it_up/R Scripts/20eylul1st.RData")
catparam <- list(use_best_model=T,loss_function='Logloss',eval_metric='Accuracy',
depth=8,learning_rate=0.37,iterations=70,prediction_type='Class')
library(catboost)
learnpool <- catboost.load_pool(train_x,label=train_y,cat_features = catnames)
testpool <- catboost.load_pool(test_x,label=test_y,cat_features = catnames)
catparam <- list(use_best_model=T,loss_function='Logloss',eval_metric='Accuracy',
depth=8,learning_rate=0.37,iterations=70,prediction_type='Class')
catmodel <- catboost.train(learnpool,testpool,catparam)
catparam <- list(use_best_model=T,loss_function='MultiClass',eval_metric='Accuracy',
depth=8,learning_rate=0.37,iterations=70,prediction_type='Class')
catmodel <- catboost.train(learnpool,testpool,catparam)
catparam <- list(use_best_model=T,loss_function='MultiClass',eval_metric='Accuracy',
depth=9,learning_rate=0.037,iterations=70,prediction_type='Class')
catmodel <- catboost.train(learnpool,testpool,catparam)
catparam <- list(use_best_model=T,loss_function='MultiClass',eval_metric='Accuracy',
depth=9,learning_rate=0.037,iterations=170,prediction_type='Class')
catmodel <- catboost.train(learnpool,testpool,catparam)
catparam <- list(use_best_model=T,loss_function='MultiClass',eval_metric='Accuracy',
depth=10,learning_rate=0.069,iterations=220,prediction_type='Class')
catmodel <- catboost.train(learnpool,testpool,catparam)
target <- read.csv("~/Desktop/pump_it_up/ImputedCatBoostModMedian2.csv", stringsAsFactors=TRUE)
View(target)
target <- target %>% select(-"id")
library(dplyr)
target <- target %>% select(-"id")
catpred <- catboost.predict(catmodel,catboost.load_pool(target),prediction_type = 'Class')
textpred <- ifelse(catpred==0,"functional",
ifelse(catpred==1,"functional needs repair","non functional"))
textpred <- ifelse(catpred==0,"functional",
ifelse(catpred==1,"functional needs repair","non functional"))
SubmissionFormat <- read.csv("~/Desktop/pump_it_up/SubmissionFormat.csv", stringsAsFactors=TRUE)
View(SubmissionFormat)
library(readr)
SubmissionFormat$status_group
SubmissionFormat$status_group <- textpred
SubmissionFormat$status_group
write_csv(SubmissionFormat,"11thSubByCatBOOST.csv")
catparam2 <- list(use_best_model=T,loss_function='MultiClass',eval_metric='Accuracy',
depth=8,learning_rate=0.08,iterations=220,prediction_type='Class')
catmodel2 <- catboost.train(learnpool,testpool,catparam2)
catpred2 <- catboost.predict(catmodel2,catboost.load_pool(target),prediction_type = 'Class')
library(caret)
confusionMatrix(as.factor(catpred),as.factor(catpred2))
textpred2 <- ifelse(catpred2==0,"functional",
ifelse(catpred2==1,"functional needs repair","non functional"))
SubmissionFormat$status_group <- textpred2
write_csv(SubmissionFormat,"12thSubByCatBOOST.csv")
catparam3 <- list(use_best_model=T,loss_function='MultiClass',eval_metric='Accuracy',
depth=7,learning_rate=0.081,iterations=400,prediction_type='Class')
catparam3 <- list(use_best_model=T,loss_function='MultiClass',eval_metric='Accuracy',
depth=7,learning_rate=0.088,iterations=400,prediction_type='Class')
catmodel3 <- catboost.train(learnpool,testpool,catparam2)
catpred3 <- catboost.predict(catmodel3,catboost.load_pool(target),prediction_type = 'Class')
confusionMatrix(as.matrix(catpred),as.matrix(catpred2))
confusionMatrix(as.factor(catpred),as.factor(catpred2))
confusionMatrix(as.factor(catpred),as.factor(catpred3))
confusionMatrix(as.factor(catpred),as.factor(catpred2))
confusionMatrix(as.factor(catpred),as.factor(catpred3))
confusionMatrix(as.factor(catpred2),as.factor(catpred3))
catmodel3 <- catboost.train(learnpool,testpool,catparam3)
catpred3 <- catboost.predict(catmodel3,catboost.load_pool(target),prediction_type = 'Class')
confusionMatrix(as.factor(catpred2),as.factor(catpred3))
catpred3 <- catboost.predict(catmodel3,catboost.load_pool(target),prediction_type = 'Class')
textpred3 <- ifelse(catpred3==0,"functional",
ifelse(catpred3==1,"functional needs repair","non functional"))
SubmissionFormat$status_group <- textpred2
SubmissionFormat$status_group <- textpred3
write_csv(SubmissionFormat,"13thSubByCatBOOST.csv")
save.image("~/Desktop/pump_it_up/R Scripts/20eylul1st.RData")
