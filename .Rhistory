confusionMatrix(predsss,as.factor(test_y))
predsss <- predict(lgbmodel,as.matrix(train_x),reshape = T)
tahmin <- predsss %>% data.frame()
myf <- function(x){
match(max(x),x)
}
predsss <- apply(tahmin,1,myf)-1
predsss <- as.factor(predsss)
confusionMatrix(predsss,as.factor(train_y))
df_num %>% View()
View(sub_num)
sub_num
nrow(sub_num)
sub_num %>% select(-"id")
x <-sub_num %>% select(-"id")
View(sub_num)
predsss <- predict(lgbmodel,as.matrix(x),reshape = T)
tahmin <- predsss %>% data.frame()
myf <- function(x){
match(max(x),x)
}
predsss <- apply(tahmin,1,myf)-1
predsss <- as.factor(predsss)
length(predsss)
textpred <- ifelse(preds==0,"functional",
ifelse(preds==1,"functional needs repair","non functional"))
textpred <- ifelse(predsss==0,"functional",
ifelse(predsss==1,"functional needs repair","non functional"))
View(SubmissionFormat)
textpred
SubmissionFormat$status_group <- textpred
SubmissionFormat$status_group <- textpred
write_csv(SubmissionFormat,"6thSubByLightGBM.csv")
library(lightgbm)
library(dplyr)
dtrain <- lgb.Dataset(as.matrix(train_x),label=train_y)
dtest <- lgb.Dataset(as.matrix(test_x),label=test_y)
valids <- list(test = dtest)
params <- list(objective = "multiclass", metric = "multi_logloss",num_class=3)
lgbmodel2 <- lgb.train(
params = params
, data = dtrain
, nrounds = 3000
, min_data = 1L
, valids = valids
, learning_rate = 0.037
, early_stopping_rounds = 150
)
lgbmodel2$best_iter
lgbmodel2$best_score
preds2 <- predict(lgbmodel2,as.matrix(train_x),reshape = T)
save.image("~/Desktop/pump_it_up/R Scripts/18eyl1stsubmission.RData")
tahmin <- preds2 %>% data.frame()
View(tahmin)
preds2 <- apply(tahmin,1,myf)-1
preds2 <- as.factor(preds2)
confusionMatrix(preds2,as.factor(train_y))
library(caret)
confusionMatrix(preds2,as.factor(train_y))
preds3 <- predict(lgbmodel2,as.matrix(test_x),reshape = T)
tahmin2 <- preds3 %>% data.frame()
preds3 <- apply(tahmin2,1,myf)-1
preds3 <- as.factor(preds3)
confusionMatrix(preds3,as.factor(test_y))
predsub <- predict(lgbmodel2,as.matrix(x),reshape = T)
tahmin3 <- predsub %>% data.frame()
predsub <- apply(tahmin3,1,myf)-1
predsub <- as.factor(predsub)
length(predsss)
textpred <- ifelse(predsub==0,"functional",
ifelse(predsub==1,"functional needs repair","non functional"))
textpred
SubmissionFormat$status_group <- textpred
library(readr)
write_csv(SubmissionFormat,"7thSubmissionByLightGBM.csv")
save.image("~/Desktop/pump_it_up/R Scripts/18eyl1stsubmission.RData")
View(df)
funindex <- sample(1:nrow(df),34500)
funindex <- sample(1:nrow(df),34500)
funindex <- sample(1:nrow(df),34500)
library(dplyr)
funtrain <- df[funindex,]
funtest <- df[-funindex,]
funtrain <- df[funindex,] %>% select(-"id")
funtest <- df[-funindex,] %>% select(-"id")
glimpse(df)
funtrainx <- funtrain %>% select(-"trgt")
funtrainy <- funtrain$trgt
funtrainy
funtrainy <- as.numeric(funtrain$trgt)
funtrainy
funtrainy <- as.numeric(funtrain$trgt)-1
funtrainy
funtestx <- funtest %>% select(-"trgt")
funtesty <- as.numeric(funtest$trgt)-1
library(lightgbm)
lgbtrain <- lgb.Dataset(as.matrix(funtrainx),label=funtrainy)
lgbtest <- lgb.Dataset(as.matrix(funtestx),label=funtesty)
valids <- list(test = lgbtest)
params <- list(objective = "multiclass", metric = "multi_logloss",num_class=3)
catnames <- df %>% purrr::keep(is.factor) %>% names()
catnames %>% View()
catnames <- df %>% purrr::keep(is.factor) %>% names() %>% select(-"id") %>% View()
catnames <- funtestx %>% purrr::keep(is.factor) %>% names()
catnames %>% View()
params <- list(objective = "multiclass", metric = "multi_logloss",num_class=3)
lgbmodel3 <- lgb.train(
params = params
, data = lgbtrain
, nrounds = 3000
, min_data = 1L
, valids = valids
, learning_rate = 0.037
, early_stopping_rounds = 150
, categorical_feature = catnames
)
prd3 <- predict(lgbmodel3,as.matrix(funtestx),reshape = T)
funpred <- apply(prd3,1,myf)
funpred <- apply(prd3,1,myf)-1
funpred <- as.factor(funpred)
library(caret)
confusionMatrix(funpred,as.factor(funtesty))
funindex <- sample(1:nrow(df),34500)
funtrain <- df[funindex,] %>% select(-"id")
funtest <- df[-funindex,] %>% select(-"id")
funtrainx <- funtrain %>% select(-"trgt")
funtrainy <- as.numeric(funtrain$trgt)-1
funtestx <- funtest %>% select(-"trgt")
funtesty <- as.numeric(funtest$trgt)-1
lgbtrain <- lgb.Dataset(as.matrix(funtrainx),label=funtrainy)
lgbtest <- lgb.Dataset(as.matrix(funtestx),label=funtesty)
valids <- list(test = lgbtest)
catnames <- funtestx %>% purrr::keep(is.factor) %>% names()
params <- list(objective = "multiclass", metric = "multi_logloss",num_class=3)
lgbmodel3 <- lgb.train(
params = params
, data = lgbtrain
, nrounds = 2000
, min_data = 1L
, valids = valids
, learning_rate = 0.37
, early_stopping_rounds = 50
, categorical_feature = catnames
)
prd3 <- predict(lgbmodel3,as.matrix(funtestx),reshape = T)
funpred <- apply(prd3,1,myf)-1
funpred <- as.factor(funpred)
confusionMatrix(funpred,as.factor(funtesty))
lgbmodel3 <- lgb.train(
params = params
, data = lgbtrain
, nrounds = 10000
, min_data = 4
, valids = valids
, learning_rate = 0.06937
, early_stopping_rounds = 1000
, categorical_feature = catnames
)
prd3 <- predict(lgbmodel3,as.matrix(funtestx),reshape = T)
funpred <- apply(prd3,1,myf)-1
funpred <- as.factor(funpred)
confusionMatrix(funpred,as.factor(funtesty))
prd3 <- predict(lgbmodel3,as.matrix(funtrainx),reshape = T)
funpred <- apply(prd3,1,myf)-1
funpred <- as.factor(funpred)
confusionMatrix(funpred,as.factor(funtrainy))
lgbmodel3 <- lgb.train(
params = params
, data = lgbtrain
, nrounds = 1000
, min_data = 20
, valids = valids
, learning_rate = 0.06937
, early_stopping_rounds = 1000
, categorical_feature = catnames
)
prd3 <- predict(lgbmodel3,as.matrix(funtrainx),reshape = T)
funpred <- apply(prd3,1,myf)-1
funpred <- as.factor(funpred)
confusionMatrix(funpred,as.factor(funtrainy))
prd3 <- predict(lgbmodel3,as.matrix(funtestx),reshape = T)
funpred <- apply(prd3,1,myf)-1
funpred <- as.factor(funpred)
confusionMatrix(funpred,as.factor(funtesty))
lgbmodel3 <- lgb.train(
params = params
, data = lgbtrain
, nrounds = 1000
, min_data = 20
, valids = valids
, learning_rate = 0.6937
, early_stopping_rounds = 1000
, categorical_feature = catnames
)
lgbmodel3 <- lgb.train(
params = params
, data = lgbtrain
, nrounds = 1000
, min_data = 20
, valids = valids
, learning_rate = 0.6937
, early_stopping_rounds = 10
, categorical_feature = catnames
)
prd3 <- predict(lgbmodel3,as.matrix(funtestx),reshape = T)
funpred <- apply(prd3,1,myf)-1
funpred <- as.factor(funpred)
confusionMatrix(funpred,as.factor(funtesty))
lgbmodel3 <- lgb.train(
params = params
, data = lgbtrain
, nrounds = 1000
, min_data = 20
, valids = valids
, learning_rate = 1
, early_stopping_rounds = 10
, categorical_feature = catnames
)
prd3 <- predict(lgbmodel3,as.matrix(funtestx),reshape = T)
funpred <- apply(prd3,1,myf)-1
funpred <- as.factor(funpred)
confusionMatrix(funpred,as.factor(funtesty))
lgbmodel3 <- lgb.train(
params = params
, data = lgbtrain
, nrounds = 1000
, min_data = 20
, valids = valids
, learning_rate = 0.3
, early_stopping_rounds = 10
, categorical_feature = catnames
)
prd3 <- predict(lgbmodel3,as.matrix(funtestx),reshape = T)
funpred <- apply(prd3,1,myf)-1
funpred <- as.factor(funpred)
confusionMatrix(funpred,as.factor(funtesty))
prd3 <- predict(lgbmodel3,as.matrix(funtrainx),reshape = T)
funpred <- apply(prd3,1,myf)-1
funpred <- as.factor(funpred)
confusionMatrix(funpred,as.factor(funtrainy))
save.image("~/Desktop/pump_it_up/R Scripts/18eyl1stsubmission.RData")
library(devtools)
install_url("https://github.com/catboost/catboost/releases/download/v0.24.1/catboost-R-Linux-0.24.1.tgz", INSTALL_opts = c("--no-multiarch"))
8thSubByCatBOOST <- read.csv("~/Desktop/pump_it_up/8thSubByCatBOOST.csv", stringsAsFactors=TRUE)
View(8thSubByCatBOOST)
one <- read.csv("~/Desktop/pump_it_up/8thSubByCatBOOST.csv", stringsAsFactors=TRUE)
7thSubmissionByLightGBM <- read.csv("~/Desktop/pump_it_up/Submissions/7thSubmissionByLightGBM.csv", stringsAsFactors=TRUE)
View(7thSubmissionByLightGBM)
two <- read.csv("~/Desktop/pump_it_up/Submissions/7thSubmissionByLightGBM.csv", stringsAsFactors=TRUE)
two %>% View()
library(magrittr)
two %>% View()
library(caret)
confusionMatrix(one$status_group,two$status_group)
load("~/Desktop/pump_it_up/R Scripts/19eyl_imputingCatBOOST.RData")
library(catboost)
library(dplyr)
library(caret)
learnpool <- catboost.load_pool(train_x,label = train_y,cat_features = catnames)
testpool <- catboost.load_pool(test_x,label = test_y,cat_features = catnames)
catparam <- list(use_best_model=T,loss_function='RMSE',eval_metric='RMSE',
depth=12,learning_rate=0.037,iterations=10)
catmodel1 <- catboost.train(learnpool,testpool,catparam)
catparam <- list(use_best_model=T,loss_function='RMSE',eval_metric='RMSE',
depth=12,learning_rate=0.37,iterations=10)
catmodel1 <- catboost.train(learnpool,testpool,catparam)
catparam <- list(use_best_model=T,loss_function='RMSE',eval_metric='RMSE',
depth=12,learning_rate=0.37,iterations=200)
catmodel1 <- catboost.train(learnpool,testpool,catparam)
pred1 <- catboost.predict(catmodel1,test_x)
pred1 <- catboost.predict(catmodel1,catboost.load_pool(test_x))
pred1
data.frame(pred=pred1,obs=test_y) %>% defaultSummary()
pred1 <- catboost.predict(catmodel1,catboost.load_pool(train_x))
data.frame(pred=pred1,obs=train_y) %>% defaultSummary()
pred1 <- catboost.predict(catmodel1,catboost.load_pool(test_x))
data.frame(pred=pred1,obs=test_y) %>% defaultSummary()
data.frame(pred=round(pred1),obs=test_y) %>% defaultSummary() #6.07 y覺l test hatas覺
data.frame(pred=pred1,obs=test_y) %>% defaultSummary() #6.07 y覺l test hatas覺
data.frame(pred=pred1,obs=test_y) %>% View()
construction_year_target_noid %>% View()
imputepred <- catboost.predict(catmodel1,catboost.load_pool(construction_year_target_noid))
length(construction_year_target_noid)
nrow(construction_year_target_noid)
imputepred <- catboost.predict(catmodel1,catboost.load_pool(construction_year_target))
imputepred <- catboost.predict(catmodel1,catboost.load_pool(construction_year_target))
imputepred <- catboost.predict(catmodel1,catboost.load_pool(construction_year_target_noid))
imputepred <- catboost.predict(catmodel1,catboost.load_pool(construction_year_target_noid))
View(construction_year_target_noid)
View(construction_year_target)
construction_year_target$construction_year <- imputepred
repairedpart <- rbind(full,construction_year_target)
View(repairedpart)
repairedid <- repairedpart$id
df[match(repairedid,df$id),] <- repairedpart
View(df)
median(df$construction_year)
median(df$construction_year,na.rm = T)
summary(df$construction_year)
plot(denisty(df$construction_year,na.rm=T))
plot(density(df$construction_year,na.rm=T))
full <- df[complete.cases(df),]
full_noid <- full %>% select(-"id")
#### Picking just NA public_meeting
logvector <- is.na(df$public_meeting)&complete.cases(df %>% select(-"public_meeting"))
public_meeting_target <- df[logvector,] %>% select(-"public_meeting")
public_meeting_target_noid <- public_meeting_target %>% select(-"id")
index <- sample(1:nrow(full),nrow(full))
index <- sample(1:nrow(full),nrow(full))
index <- sample(1:nrow(full),nrow(full))
index <- sample(1:nrow(full),nrow(full))
index <- sample(1:nrow(full),nrow(full))
index <- sample(1:nrow(full),nrow(full))
index <- sample(1:nrow(full),nrow(full))
index <- sample(1:nrow(full),nrow(full))
index <- sample(1:nrow(full),nrow(full))
train_index <- index[1:33796]
train<-full_noid[train_index,]
train_x<-train %>% select(-c("public_meeting"))
train_y<-train$public_meeting
train_y
test<-full_noid[-train_index,]
test_x<-test %>% select(-c("public_meeting"))
test_y<-test$public_meeting
learnpool <- catboost.load_pool(train_x,label = train_y,cat_features = catnames)
train$public_meeting
train_y<-as.numeric(train$public_meeting)
train_y
train_y<-as.numeric(train$public_meeting)-1
train_y
test_y<-as.numeric(test$public_meeting)-1
learnpool <- catboost.load_pool(train_x,label = train_y,cat_features = catnames)
testpool <- catboost.load_pool(test_x,label = test_y,cat_features = catnames)
catparam <- list(use_best_model=T,loss_function='Logloss',eval_metric='Accuracy',
depth=12,learning_rate=0.37,iterations=200,prediction_type='Class')
save.image("~/Desktop/pump_it_up/R Scripts/19eyl_imputingCatBOOST.RData")
catparam <- list(use_best_model=T,loss_function='Logloss',eval_metric='Accuracy',
depth=12,learning_rate=0.37,iterations=200,prediction_type='Class')
catmodel2 <- catboost.train(learnpool,testpool,catparam)
catparam <- list(use_best_model=T,loss_function='Logloss',eval_metric='Accuracy',
depth=12,learning_rate=0.37,iterations=35,prediction_type='Class')
catmodel2 <- catboost.train(learnpool,testpool,catparam)
catparam <- list(use_best_model=T,loss_function='Logloss',eval_metric='Accuracy',
depth=12,learning_rate=0.37,iterations=50,prediction_type='Class')
catmodel2 <- catboost.train(learnpool,testpool,catparam)
load("~/Desktop/pump_it_up/R Scripts/19eyl_imputingCatBOOST.RData")
test_x %>% View()
pred2 <- catboost.predict(catmodel2,catboost.load_pool(test_x))
pred2 <- catboost.predict(catmodel2,catboost.load_pool(test_x),type="class")
pred2 <- catboost.predict(catmodel2,catboost.load_pool(test_x),prediction_type='Class')
confusionMatrix(as.factor(pred2),as.factor(test_y))
imputepred2 <- catboost.predict(catmodel2,catboost.load_pool(public_meeting_target_noid),prediction_type = 'Class')
imputepred2 <- ifelse(imputepred2==0,"False","True")
imputepred2 <- as.factor(imputepred2)
imputepred2
public_meeting_target$public_meeting <- imputepred2
repairedpart <- rbind(full,public_meeting_target)
repairedid <- repairedpart$id
df[match(repairedid,df$id),] <- repairedpart
full <- df[complete.cases(df),]
full_noid <- full %>% select(-"id")
#### Picking just NA public_meeting
logvector <- is.na(df$permit)&complete.cases(df %>% select(-"permit"))
permit_target <- df[logvector,] %>% select(-"permit")
permit_target_noid <- permit_target %>% select(-"id")
index <- sample(1:nrow(full),nrow(full))
train_index <- index[1:35000]
train<-full_noid[train_index,]
train_x<-train %>% select(-c("permit"))
train$permit
train_y<-as.numeric(train$permit)-1
train_y
test<-full_noid[-train_index,]
test_x<-test %>% select(-c("permit"))
test_y<-as.numeric(test$permit)-1
catnames <- train %>% purrr::keep(is.factor) %>% names()
catnames <- train %>% purrr::keep(is.factor) %>% names()
learnpool <- catboost.load_pool(train_x,label = train_y,cat_features = catnames)
testpool <- catboost.load_pool(test_x,label = test_y,cat_features = catnames)
catparam <- list(use_best_model=T,loss_function='Logloss',eval_metric='Accuracy',
depth=12,learning_rate=0.37,iterations=50,prediction_type='Class')
catmodel3 <- catboost.train(learnpool,testpool,catparam)
pred3 <- catboost.predict(catmodel2,catboost.load_pool(test_x),prediction_type='Class')
pred3 <- catboost.predict(catmodel3,catboost.load_pool(test_x),prediction_type='Class')
confusionMatrix(as.factor(pred2),as.factor(test_y)) ### %96.77 test acc.
confusionMatrix(as.factor(pred3),as.factor(test_y)) ### %96.77 test acc.
confusionMatrix(as.factor(pred3),as.factor(test_y)) ### %97.48 test acc.
imputepred3 <- catboost.predict(catmodel3,catboost.load_pool(permit_target_noid),prediction_type = 'Class')
imputepred3 <- ifelse(imputepred3==0,"False","True")
imputepred3 <- as.factor(imputepred3)
permit_target$permit <- imputepred3
repairedpart <- rbind(full,permit_target)
repairedid <- repairedpart$id
df[match(repairedid,df$id),] <- repairedpart
full <- df[complete.cases(df),]
full_noid <- full %>% select(-"id")
View(full)
library(readr)
write_csv(full,"19EylImputedCatBOOST.csv")
save.image("~/Desktop/pump_it_up/R Scripts/19eyl_imputingCatBOOST.RData")
19EylImputedCatBOOST <- read.csv("~/Desktop/pump_it_up/19EylImputedCatBOOST.csv", stringsAsFactors=TRUE)
View(19EylImputedCatBOOST)
df <- read.csv("~/Desktop/pump_it_up/19EylImputedCatBOOST.csv", stringsAsFactors=TRUE)
anyNA(df)
View(df)
glimpse(df)
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index %>% View()
index %>% View()
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
index <- sample(1:nrow(df),nrow(df))
train_index <- index[1:35603]
train <- df[train_index,]
train <- df[train_index,] %>% select(-"id")
train_x <- train %>% select(-"status_group")
train_y <- train$status_group
head(train_y)
train_y %>% View()
train_y <- as.numeric(train$status_group)-1
train_y %>% View()
test <- df[-train_index,] %>% select(-"id")
View(train_x)
test_x <- test %>% select(-"status_group")
test_y <- as.numeric(test$status_group)-1
catnames <- train %>% purrr::keep(is.factor) %>% names
catnames
catnames <- train %>% purrr::keep(is.factor) %>% names
learnpool <- catboost.load_pool(train_x,label = train_y,cat_features = catnames)
testpool <- catboost.load_pool(test_x,label = test_y,cat_features = catnames)
catparam <- list(use_best_model=T,loss_function='Logloss',eval_metric='Accuracy',
depth=12,learning_rate=0.37,iterations=50,prediction_type='Class')
catmodel <- catboost.train(learnpool,testpool,catparam)
catparam <- list(use_best_model=T,loss_function='Multiclass',eval_metric='Accuracy',
depth=12,learning_rate=0.37,iterations=50,prediction_type='Class')
catmodel <- catboost.train(learnpool,testpool,catparam)
catparam <- list(use_best_model=T,loss_function='MultiClass',eval_metric='Accuracy',
depth=12,learning_rate=0.37,iterations=50,prediction_type='Class')
catmodel <- catboost.train(learnpool,testpool,catparam)
save.image("~/Desktop/pump_it_up/R Scripts/19Eyl_Night.RData")
catparam2 <- list(use_best_model=T,loss_function='MultiClass',eval_metric='Accuracy',
depth=12,learning_rate=0.37,iterations=50,prediction_type='Class')
catparam2 <- list(use_best_model=T,loss_function='MultiClass',eval_metric='Accuracy',
depth=12,learning_rate=0.037,iterations=50,prediction_type='Class')
catparam2 <- list(use_best_model=T,loss_function='MultiClass',eval_metric='Accuracy',
depth=12,learning_rate=0.037,iterations=100,prediction_type='Class')
catmodel2 <- catboost.train(learnpool,testpool,catparam2)
catparam2 <- list(use_best_model=T,loss_function='MultiClass',eval_metric='Accuracy',
depth=12,learning_rate=0.69,iterations=100,prediction_type='Class')
catmodel2 <- catboost.train(learnpool,testpool,catparam2)
catparam3 <- list(use_best_model=T,loss_function='MultiClass',eval_metric='Accuracy',
depth=6,learning_rate=0.37,iterations=100,prediction_type='Class')
catmodel3 <- catboost.train(learnpool,testpool,catparam3)
catparam3 <- list(use_best_model=T,loss_function='MultiClass',eval_metric='Accuracy',
depth=7,learning_rate=0.37,iterations=200,prediction_type='Class')
catmodel3 <- catboost.train(learnpool,testpool,catparam3)
pred <- catboost.predict(catmodel3,catboost.load_pool(test_x),prediction_type = 'Class')
pred <- catboost.predict(catmodel3,catboost.load_pool(test_x),prediction_type = 'Class') %>% as.factor()
data.frame(pred,obs = as.factor(test_y)) %>% confusionMatrix()
data.frame(pred,as.factor(test_y)) %>% confusionMatrix()
data.frame(pred,as.factor(test_y))
(pred,as.factor(test_y)) %>% confusionMatrix()
-confusionMatrix(pred,as.factor(test_y))
confusionMatrix(pred,as.factor(test_y))
fullsubmission <- read.csv("~/Desktop/pump_it_up/Imputed Submission Var./fullsubmission.csv", stringsAsFactors=TRUE)
View(fullsubmission)
fullsubmission <- read.csv("~/Desktop/pump_it_up/Imputed Submission Var./fullsubmission.csv", stringsAsFactors=TRUE)
SubmissionFormat <- read.csv("~/Desktop/pump_it_up/SubmissionFormat.csv", stringsAsFactors=TRUE)
View(SubmissionFormat)
fullsubmission <- fullsubmission %>% select(-"id")
pred <- catboost.predict(catmodel3,catboost.load_pool(fullsubmission),prediction_type = 'Class')
pred <- ifelse(pred==0,"functional",
ifelse(pred==1,"functional needs repair","non functional"))
SubmissionFormat$status_group <- pred
SubmissionFormat
write_csv(SubmissionFormat,"9thSubByCatBOOST.csv")
save.image("~/Desktop/pump_it_up/R Scripts/19Eyl_Night.RData")
